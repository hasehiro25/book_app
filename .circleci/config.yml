version: 2.1
executors:
  default:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node-browsers
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: .bundle
commands:
  install_bundler:
    steps:
      - run:
          name: install bundler
          command: gem install bundler     
  restore_bundle_cache:
    steps:
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
  install_bundle:
    steps:
      - run:
          name: install bundle
          command: bundle install
  save_bundle_cache:
    steps:
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - .bundle
  restore_yarn_cache:
    steps:
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
  install_yarn:
    steps:
      - run:
          name: install yarn
          command: yarn install --cache-folder ~/.cache/yarn
  save_yarn_cache:
    steps:
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn      
jobs:
  build:
    parallelism: 1
    executor: default
    environment:
      RAILS_ENV: test
    steps:
      - checkout
      - install_bundler
      - restore_bundle_cache
      - install_bundle
      - save_bundle_cache
      - restore_yarn_cache
      - install_yarn
      - save_yarn_cache
      - run:
          name: run tests
          command: |
            bundle exec rake test
            bundle exec rake test:system
      - store_test_results:
          path: test/reports
  deploy:
    parallelism: 1
    executor: default
    environment:
      RAILS_ENV: production
    steps:
      - checkout
      - install_bundler
      - restore_bundle_cache
      - install_bundle
      - save_bundle_cache
      - restore_yarn_cache
      - install_yarn
      - save_yarn_cache
      - add_ssh_keys:
          fingerprints:
            - "91:5b:7f:10:ad:ce:3b:67:7f:7e:bf:50:f6:25:ab:5c"
      - run:
          name: deploy by ssh
          command: |
            bundle exec cap production deploy
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
